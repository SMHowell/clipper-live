/* ── SPLIT VIEW LAYOUT ── */
.view-container {
  display: flex;           /* side-by-side */
  flex-direction: row;     /* explicit, in case something else set column */
  width: 100vw;            /* full viewport width */
  height: 100vh;           /* full viewport height */
  margin: 0;               /* override any #root centering */
  padding: 0;
  overflow: hidden;        /* hide overflow if any */
}

.view {
  flex: 1 1 0;     /* keep equal grow/shrink */
  min-width: 0;    /* <-- allow it to collapse */
  min-height: 0;   /* <-- for the portrait case, allow vertical shrink */
  height: 100%;
}


/* optional: if you ever want to tweak ordering */
.view-primary  { order: 1; }
.view-secondary{ order: 2; }

/* Portrait: swap them top/bottom if you really want—but
   since we’re row-based, you could also leave this out: */

/* ── UNDO THE CRA/#root CONSTRAINT ┒─ */
#root {
  max-width: none;  /* let it fill the screen */
  padding: 0;
  margin: 0;
}


/* ── Portrait: stack them in two rows ── */
@media (max-aspect-ratio: 1/1) {
  .view-container {
    flex-direction: column;  /* switch to rows */
  }
  /* .view { flex:1 } remains the same: flex will divide the height equally */
}